{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1124.51302",
      "templateHash": "4280566656564033314"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location the resources should live at."
      },
      "minLength": 1
    },
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "The name of what you want the Azure CosmosDB account to be called."
      },
      "minLength": 1
    },
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of what you want the Azure Functions app to be called."
      },
      "minLength": 1
    }
  },
  "variables": {
    "managedIdentityName": "[format('{0}-identity', parameters('functionAppName'))]",
    "functionAppSvcPlanName": "[format('{0}-ASP-{1}', replace(resourceGroup().name, '-', ''), take(uniqueString(resourceGroup().id), 4))]",
    "storageAcctName": "[format('{0}{1}stg', take(uniqueString(resourceGroup().id), 6), take(replace(resourceGroup().name, '-', ''), 6))]"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-10-15",
      "name": "[parameters('databaseName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "identity": {
        "type": "None"
      },
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-10-15",
      "name": "[format('{0}/{1}', parameters('databaseName'), 'avd-resource-manager')]",
      "location": "[parameters('location')]",
      "properties": {
        "resource": {
          "id": "avd-resource-manager"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[format('{0}/{1}/{2}', parameters('databaseName'), 'avd-resource-manager', 'monitored-hosts')]",
      "location": "[parameters('location')]",
      "properties": {
        "resource": {
          "id": "monitored-hosts",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "kind": "Hash",
            "paths": [
              "/partitionKey"
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseName'), 'avd-resource-manager')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[variables('storageAcctName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}', variables('storageAcctName'), 'default')]",
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcctName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAcctName'), 'default', 'azure-webjobs-hosts')]",
      "properties": {
        "publicAccess": "None",
        "immutableStorageWithVersioning": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAcctName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcctName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAcctName'), 'default', 'azure-webjobs-secrets')]",
      "properties": {
        "publicAccess": "None",
        "immutableStorageWithVersioning": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAcctName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcctName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAcctName'), 'default', 'function-releases')]",
      "properties": {
        "publicAccess": "None",
        "immutableStorageWithVersioning": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAcctName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcctName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAcctName'), 'default', 'scm-releases')]",
      "properties": {
        "publicAccess": "None",
        "immutableStorageWithVersioning": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAcctName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcctName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('managedIdentityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppSvcPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')))]": {}
        }
      },
      "properties": {
        "enabled": true,
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "DOTNET|6.0",
          "functionAppScaleLimit": 200,
          "minimumElasticInstanceCount": 1
        },
        "redundancyMode": "None",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionAppSvcPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionAppSvcPlanName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/{1}', parameters('functionAppName'), 'web')]",
      "properties": {
        "numberOfWorkers": 1,
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "DOTNET|6.0",
        "alwaysOn": false,
        "functionAppScaleLimit": 200,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 1
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/{1}', parameters('functionAppName'), 'appsettings')]",
      "properties": {
        "AzureSubscriptionId": "[subscription().subscriptionId]",
        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', variables('storageAcctName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAcctName')), '2021-06-01').keys[0].value, environment().suffixes.storage)]",
        "CosmosDbConnectionString": "[format('AccountEndpoint=https://{0}.documents.azure.com:443/;AccountKey={1};', parameters('databaseName'), listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseName')), '2021-10-15').primaryMasterKey)]",
        "CosmosDbDatabaseName": "avd-resource-manager",
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "FUNCTIONS_WORKER_RUNTIME": "dotnet-isolated",
        "ManagedIdentityClientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).clientId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseName'), 'avd-resource-manager')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcctName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/{1}', parameters('functionAppName'), format('{0}.azurewebsites.net', parameters('functionAppName')))]",
      "properties": {
        "siteName": "[parameters('functionAppName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppSvcPlanResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/serverfarms', variables('functionAppSvcPlanName'))]"
    },
    "functionAppResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
    },
    "functionAppStorageAccountResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcctName'))]"
    },
    "cosmosDbResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseName'))]"
    },
    "managedIdentityResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
    }
  }
}